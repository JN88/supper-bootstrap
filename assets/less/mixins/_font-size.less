// MIXIN: Generate Font Size
//--------------------------------------------------------------------------------
// Parameter 		Type 		Default 		Description
//--------------------------------------------------------------------------------
// @maxValue 		int							maximum value
// @minValue 		int			1				Minium value
// @countDown 		int			1				Count down value
// @important 		boolean		false			If value is true values will be add !important

.fontSizeLoop(@maxValue, @minValue: 1, @countDown: 1, @important: false) {
	@numberMaxValue: unit(@maxValue);
	@unitMaxValue: get-unit(@maxValue);
	@numberMinValue: unit(@minValue);
	@unitMinValue: get-unit(@maxValue);

	.checkImportant(@important);

	// Default unit is px
	.loopSize (@numberMaxValue) when (@numberMaxValue >= @numberMinValue) and (@unitMaxValue = px){
		.@{font-size-prefix}-@{numberMaxValue}@{importantClass} {
			font-size: ~"@{numberMaxValue}@{unitMaxValue}@{important}";
		}

		// next iteration
		.loopSize(@numberMaxValue - @countDown);
	}
	// When unit is not px
	.loopSize (@index) when (@index >= @minValue) and not (@unitMaxValue = px){
		.@{font-size-prefix}-@{index}@{unitMaxValue}@{importantClass} {
			font-size: ~"@{index}@{unitMaxValue}@{important}";
		}

		// next iteration
		.loopSize(@index - @countDown);
	}

	// end the loop when index is 0
	.loopSize (0) {}
	.loopSize(@numberMaxValue);
}