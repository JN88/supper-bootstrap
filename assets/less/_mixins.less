//
// MIXINS
// --------------------------------------------------

// MIXIN: Generate Margin and Padding
//--------------------------------------------------------------------------------
// Parameter 		Type 		Default 		Description
//--------------------------------------------------------------------------------
// @maxValue 		int							maximum value
// @minValue 		int							Minium value
// @countDown 		int			5				Count down value
// @unit 			string		px				Unit use can is px, em, pt...

.marginAndPadding(@maxValue, @minValue: 0, @countDown: 5, @unit: px)
{
	@numberMaxValue: unit(@maxValue);
	@unitMaxValue: get-unit(@maxValue);
	@numberMinValue: unit(@minValue);
	@unitMinValue: get-unit(@maxValue);


	// Default unit is px
	.loop_margin_padding (@numberMaxValue) when (@numberMaxValue >= @numberMinValue) and (@unitMaxValue = px){

		// Padding
		//------------------------------------------------------------
		.pd-@{numberMaxValue} {padding: ~"@{numberMaxValue}@{unitMaxValue}";}
		.pdT-@{numberMaxValue} {padding-top: ~"@{numberMaxValue}@{unitMaxValue}";}
		.pdR-@{numberMaxValue} {padding-right: ~"@{numberMaxValue}@{unitMaxValue}";}
		.pdB-@{numberMaxValue} {padding-bottom: ~"@{numberMaxValue}@{unitMaxValue}";}
		.pdL-@{numberMaxValue} {padding-left: ~"@{numberMaxValue}@{unitMaxValue}";}

		// Padding Horizatial
		.pd-0-@{numberMaxValue} {padding: 0 ~"@{numberMaxValue}@{unitMaxValue}";}

		// Padding Vertical
		.pd-@{numberMaxValue}-0 {padding: ~"@{numberMaxValue}@{unitMaxValue}" 0;}

		// Margin
		//------------------------------------------------------------
		.mg-@{numberMaxValue} {margin: ~"@{numberMaxValue}@{unitMaxValue}";}
		.mgT-@{numberMaxValue} {margin-top: ~"@{numberMaxValue}@{unitMaxValue}";}
		.mgR-@{numberMaxValue} {margin-right: ~"@{numberMaxValue}@{unitMaxValue}";}
		.mgB-@{numberMaxValue} {margin-bottom: ~"@{numberMaxValue}@{unitMaxValue}";}
		.mgL-@{numberMaxValue} {margin-left: ~"@{numberMaxValue}@{unitMaxValue}";}

		// margin Horizatial
		.mg-0-@{numberMaxValue} {margin: 0 ~"@{numberMaxValue}@{unitMaxValue}";}

		// margin Vertical
		.mg-@{numberMaxValue}-0 {margin: ~"@{numberMaxValue}@{unitMaxValue}" 0;}

		// next iteration
		.loop_margin_padding(@numberMaxValue - @countDown);
	}

	// When unit is not px
	.loop_margin_padding(@numberMaxValue) when (@numberMaxValue >= @minValue) and not (@unitMaxValue = px){

		// Padding
		//------------------------------------------------------------
		.pd-@{numberMaxValue}@{unitMaxValue} {padding: ~"@{numberMaxValue}@{unitMaxValue}";}
		.pdT-@{numberMaxValue}@{unitMaxValue} {padding-top: ~"@{numberMaxValue}@{unitMaxValue}";}
		.pdR-@{numberMaxValue}@{unitMaxValue} {padding-right: ~"@{numberMaxValue}@{unitMaxValue}";}
		.pdB-@{numberMaxValue}@{unitMaxValue} {padding-bottom: ~"@{numberMaxValue}@{unitMaxValue}";}
		.pdL-@{numberMaxValue}@{unitMaxValue} {padding-left: ~"@{numberMaxValue}@{unitMaxValue}";}

		// Padding Horizatial
		.pd-0@{unitMaxValue}-@{numberMaxValue}@{unitMaxValue} {padding: 0 ~"@{numberMaxValue}@{unitMaxValue}";}

		// Padding Vertical
		.pd-@{numberMaxValue}@{unitMaxValue}-0@{unitMaxValue} {padding: ~"@{numberMaxValue}@{unitMaxValue}" 0;}

		// Margin
		//------------------------------------------------------------
		.mg-@{numberMaxValue}@{unitMaxValue} {margin: ~"@{numberMaxValue}@{unitMaxValue}";}
		.mgT-@{numberMaxValue}@{unitMaxValue} {margin-top: ~"@{numberMaxValue}@{unitMaxValue}";}
		.mgR-@{numberMaxValue}@{unitMaxValue} {margin-right: ~"@{numberMaxValue}@{unitMaxValue}";}
		.mgB-@{numberMaxValue}@{unitMaxValue} {margin-bottom: ~"@{numberMaxValue}@{unitMaxValue}";}
		.mgL-@{numberMaxValue}@{unitMaxValue} {margin-left: ~"@{numberMaxValue}@{unitMaxValue}";}

		// margin Horizatial
		.mg-0@{unitMaxValue}-@{numberMaxValue}@{unitMaxValue} {margin: 0 ~"@{numberMaxValue}@{unitMaxValue}";}

		// margin Vertical
		.mg-@{numberMaxValue}@{unitMaxValue}-0@{unitMaxValue} {margin: ~"@{numberMaxValue}@{unitMaxValue}" 0;}

		// next iteration
		.loop_margin_padding(@numberMaxValue - @countDown);
	}

	// end the loop when index is 0
	.loop_margin_padding (0) {}

	// "call" the loopingClass the first time with highest value
	.loop_margin_padding (@numberMaxValue);
}

// MIXIN: Generate Font Size
//--------------------------------------------------------------------------------
// Parameter 		Type 		Default 		Description
//--------------------------------------------------------------------------------
// @maxValue 		int							maximum value
// @minValue 		int							Minium value
// @countDown 		int			1				Count down value

.fontSizeLoop(@maxValue, @minValue: 0, @countDown: 1) {
	@numberMaxValue: unit(@maxValue);
	@unitMaxValue: get-unit(@maxValue);
	@numberMinValue: unit(@minValue);
	@unitMinValue: get-unit(@maxValue);

	// Default unit is px
	.loopSize (@numberMaxValue) when (@numberMaxValue >= @numberMinValue) and (@unitMaxValue = px){
		.fs-@{numberMaxValue} {
			font-size: ~"@{numberMaxValue}@{unitMaxValue}";
		}

		// next iteration
		.loopSize(@numberMaxValue - @countDown);
	}
	// When unit is not px
	.loopSize (@index) when (@index >= @minValue) and not (@unitMaxValue = px){
		.fs-@{index}@{unitMaxValue} {
			font-size: ~"@{index}@{unitMaxValue}";
		}

		// next iteration
		.loopSize(@index - @countDown);
	}

	// end the loop when index is 0
	.loopSize (0) {}
	.loopSize(@numberMaxValue);
}

// MIXIN: Generate Width
//--------------------------------------------------------------------------------
// Parameter 		Type 		Default 		Description
//--------------------------------------------------------------------------------
// @maxValue 		int							maximum value
// @minValue 		int							Minium value
// @countDown 		int			5				Count down value

.widthSizeLoop(@maxValue, @minValue: 0, @countDown: 5) {
	@numberMaxValue: unit(@maxValue);
	@unitMaxValue: get-unit(@maxValue);
	@numberMinValue: unit(@minValue);
	@unitMinValue: get-unit(@maxValue);

	// Default unit is px
	.loopSize (@numberMaxValue) when (@numberMaxValue >= @numberMinValue) and (@unitMaxValue = px){
		.w-@{numberMaxValue} {
			font-size: ~"@{numberMaxValue}@{unitMaxValue}";
		}

		// next iteration
		.loopSize(@numberMaxValue - @countDown);
	}
	// When unit is not px
	.loopSize (@index) when (@index >= @minValue) and not (@unitMaxValue = px){
		.w-@{index}@{unitMaxValue} {
			font-size: ~"@{index}@{unitMaxValue}";
		}

		// next iteration
		.loopSize(@index - @countDown);
	}

	// end the loop when index is 0
	.loopSize (0) {}
	.loopSize(@numberMaxValue);
}


// MIXIN: Liquid Layout
//--------------------------------------------------------------------------------
#liquid-layout {

	// MIXIN: Fixed-Fluid Layout Use Overflow Hidden
	//--------------------------------------------------------------------------------
	// Parameter 			Type 		Default 		Description
	//--------------------------------------------------------------------------------
	// @widthFixedColumn 	int			300px			With of fixed column
	// @gutterSize			int			20px			Space (margin) between columns
	// @fixedColumnName 	string		fixed-column	Default name of fixed column
	// @fluidColumnName		string 		fluid-column 	Default name of fluid column

	.fixedFluidOverflow(@widthFixedColumn: 300px, @gutterSize: 20px, @fixedColumnName: fixed-column, @fluidColumnName: fluid-column) {
		> .@{fixedColumnName} {
			float: left;
			width: @widthFixedColumn;
			margin-right: @gutterSize;
			+ .@{fluidColumnName} {
				overflow: hidden;
			}
			&.hidden, &.hide {
				+ .@{fluidColumnName} {
					overflow: visible;
				}
			}
		}
	}

	// MIXIN: Remove Fixed-Fluid Layout Use Overflow Hidden
	//--------------------------------------------------------------------------------
	// Parameter 			Type 		Default 		Description
	//--------------------------------------------------------------------------------
	// @fixedColumnName 	string		fixed-column	Default name of fixed column
	// @fluidColumnName		string 		fluid-column 	Default name of fluid column

	.unFixedFluidOverflow(@fixedColumnName: fixed-column, @fluidColumnName: fluid-column){
		> .@{fixedColumnName} {
			float: none;
			width: auto;
			margin-right: 0;
			+ .@{fluidColumnName} {
				overflow: visible;
			}
		}
	}

	// MIXIN: Fluid-Fixed Layout Use Overflow
	//--------------------------------------------------------------------------------
	// Parameter 			Type 		Default 		Description
	//--------------------------------------------------------------------------------
	// @widthFixedColumn 	int			300px			With of fixed column
	// @gutterSize			int			20px			Space (margin) between columns
	// @fixedColumnName 	string		fixed-column	Default name of fixed column
	// @fluidColumnName		string 		fluid-column 	Default name of fluid column

	.fluidFixedOverflow(@widthFixedColumn: 300px, @gutterSize: 20px, @fixedColumnName: fixed-column, @fluidColumnName: fluid-column) {
		> .@{fixedColumnName} {
			float: right;
			width: @widthFixedColumn;
			margin-left: @gutterSize;
			+ .@{fluidColumnName} {
				overflow: hidden;
			}
			&.hidden, &.hide {
				+ .@{fluidColumnName} {
					overflow: visible;
				}
			}
		}
	}

	// MIXIN: Remove Fixed-Fluid Layout use Overflow Hidden
	//--------------------------------------------------------------------------------
	// Parameter 			Type 		Default 		Description
	//--------------------------------------------------------------------------------
	// @fixedColumnName 	string		fixed-column	Default name of fixed column
	// @fluidColumnName		string 		fluid-column 	Default name of fluid column

	.unFluidFixedOverflow(@fixedColumnName: fixed-column, @fluidColumnName: fluid-column) {
		> .@{fixedColumnName} {
			float: none;
			width: auto;
			margin-left: 0;
		}
		> .@{fluidColumnName} {
			overflow: visible;
		}
	}

	// MIXIN: Fixed-Fluid-Fixed Layout Use Overflow Hidden
	//--------------------------------------------------------------------------------
	// Parameter 				Type 		Default 			Description
	//--------------------------------------------------------------------------------
	// @widthFixedLeftColumn 	int			300px				With of fixed left column
	// @widthFixedRightColumn 	int			300px				With of fixed right column
	// @gutterLeftSize			int			20px				Space (margin) of fixed left columns
	// @gutterRightSize			int			20px				Space (margin) of fixed right columns
	// @fixedLeftColumnName 	string		fixed-left-column 	Default name of fixed left column
	// @fixedRightColumnName 	string		fixed-right-column	Default name of fixed right column
	// @fluidColumnName			string 		fluid-column 		Default name of fluid column

	.fixedFluidFixedOverflow(@widthFixedLeftColumn: 300px, @gutterLeftSize: 20px, @widthFixedRightColumn: 300px, @gutterRightSize: 20px, @fixedLeftColumnName: fixed-left-column, @fixedRightColumnName: fixed-right-column, @fluidColumnName: fluid-column) {
		> .@{fixedLeftColumnName} {
			float: left;
			width: @widthFixedLeftColumn;
			margin-right: @gutterLeftSize;
		}
		> .@{fixedRightColumnName} {
			float: right;
			width: @widthFixedRightColumn;
			margin-left: @gutterRightSize;
		}
		> .@{fluidColumnName} {
			overflow: hidden;
		}
		> .@{fixedLeftColumnName}.hide + .@{fixedRightColumnName}.hide,
		> .@{fixedLeftColumnName}.hidden + .@{fixedRightColumnName}.hidden {
			+ .@{fluidColumnName} {
				overflow: visible;
			}
		}
	}

	// MIXIN: Remove Fixed-Fluid-Fixed Layout Use Overflow Hidden
	//--------------------------------------------------------------------------------
	// Parameter 				Type 		Default 			Description
	//--------------------------------------------------------------------------------
	// @fixedLeftColumnName 	string		fixed-left-column 	Default name of fixed left column
	// @fixedRightColumnName 	string		fixed-right-column	Default name of fixed right column
	// @fluidColumnName			string 		fluid-column 		Default name of fluid column

	.unFixedFluidFixedOverflow(@fixedLeftColumnName: fixed-left-column, @fixedRightColumnName: fixed-right-column, @fluidColumnName: fluid-column) {
		> .@{fixedLeftColumnName} {
			float: none;
			width: auto;
			margin-right: 0;
		}
		> .@{fixedRightColumnName} {
			float: right;
			width: auto;
			margin-left: 0;
		}
		> .@{fluidColumnName} {
			overflow: visible;
		}
	}

	// MIXIN: Fixed-Fluid Layout Swap
	//--------------------------------------------------------------------------------
	// Parameter 				Type 		Default 		Description
	//--------------------------------------------------------------------------------
	// @widthFixedColumn 		int			300px			With of fixed column
	// @gutterSize				int			20px			Space (margin) between columns
	// @fixedColumnName 		string		fixed-column	Default name of fixed column
	// @fluidColumnName			string 		fluid-column 	Default name of fluid column
	// @fluidInnerColumnName 	string 		inner 			Default name of fluid column inner

	.fixedFluidSwap(@widthFixedColumn: 300px, @gutterSize: 20px, @fixedColumnName: fixed-column, @fluidColumnName: fluid-column, @fluidInnerColumnName: inner) {
		> .@{fluidColumnName} {
			float: left;
			width: 100%;
			> .@{fluidInnerColumnName} {
				margin-left: @widthFixedColumn + @gutterSize;
			}
		}
		> .@{fixedColumnName} {
			float: left;
			width: @widthFixedColumn;
			margin-left: -100%;
		}
	}

	// MIXIN: Remove Fixed-Fluid Layout Swap
	//--------------------------------------------------------------------------------
	// Parameter 				Type 		Default 		Description
	//--------------------------------------------------------------------------------
	// @fixedColumnName 		string		fixed-column	Default name of fixed column
	// @fluidColumnName			string 		fluid-column 	Default name of fluid column
	// @fluidInnerColumnName 	string 		inner 			Default name of fluid column inner

	.unFixedFluidSwap(@fixedColumnName: fixed-column, @fluidColumnName: fluid-column, @fluidInnerColumnName: inner) {
		> .@{fluidColumnName} {
			float: none;
			width: auto;
			> .@{fluidInnerColumnName} {
				margin-left: 0;
			}
		}
		> .@{fixedColumnName} {
			float: none;
			width: auto;
			margin-left: 0;
		}
	}

	// MIXIN: Fluid-Fixed Layout Swap
	//--------------------------------------------------------------------------------
	// Parameter 				Type 		Default 		Description
	//--------------------------------------------------------------------------------
	// @widthFixedColumn 		int			300px			With of fixed column
	// @gutterSize				int			20px			Space (margin) between columns
	// @fixedColumnName 		string		fixed-column	Default name of fixed column
	// @fluidColumnName			string 		fluid-column 	Default name of fluid column
	// @fluidInnerColumnName 	string 		inner 			Default name of fluid column inner

	.fluidFixedSwap(@widthFixedColumn: 300px, @gutterSize: 20px, @fixedColumnName: fixed-column, @fluidColumnName: fluid-column, @fluidInnerColumnName: inner) {
		> .@{fluidColumnName} {
			float: left;
			width: 100%;
			> .@{fluidInnerColumnName} {
				margin-right: @widthFixedColumn + @gutterSize;
			}
		}
		> .@{fixedColumnName} {
			float: right;
			width: @widthFixedColumn;
			margin-left: -@widthFixedColumn;
		}
	}

	//--------------------------------------------------------------------------------
	// Parameter 				Type 		Default 		Description
	//--------------------------------------------------------------------------------
	// @fixedColumnName 		string		fixed-column	Default name of fixed column
	// @fluidColumnName			string 		fluid-column 	Default name of fluid column
	// @fluidInnerColumnName 	string 		inner 			Default name of fluid column inner

	// MIXIN: Remove Fluid-Fixed Layout Swap
	.unFluidFixedSwap(@fixedColumnName: fixed-column, @fluidColumnName: fluid-column, @fluidInnerColumnName: inner) {
		> .@{fluidColumnName} {
			float: none;
			width: auto;
			> .@{fluidInnerColumnName} {
				margin-right: 0;
			}
		}
		> .@{fixedColumnName} {
			float: right;
			width: auto;
			margin-left: 0;
		}
	}

	// MIXIN: Fixed-Fluid-Fixed Layout Swap
	//--------------------------------------------------------------------------------
	// Parameter 				Type 		Default 			Description
	//--------------------------------------------------------------------------------
	// @widthFixedLeftColumn 	int			300px				With of fixed left column
	// @widthFixedRightColumn 	int			300px				With of fixed right column
	// @gutterLeftSize			int			20px				Space (margin) of fixed left columns
	// @gutterRightSize			int			20px				Space (margin) of fixed right columns
	// @fixedLeftColumnName 	string		fixed-left-column 	Default name of fixed left column
	// @fixedRightColumnName 	string		fixed-right-column	Default name of fixed right column
	// @fluidColumnName			string 		fluid-column 		Default name of fluid column
	// @fluidInnerColumnName 	string 		inner 				Default name of fluid column inner

	.fixedFluidFixedSwap(@widthFixedLeftColumn: 300px, @gutterLeftSize: 20px, @widthFixedRightColumn: 300px, @gutterRightSize: 20px, @fixedLeftColumnName: fixed-left-column, @fixedRightColumnName: fixed-right-column, @fluidColumnName: fluid-column, @fluidInnerColumnName: inner) {
		> .@{fluidColumnName} {
			float: left;
			width: 100%;
			> .@{fluidInnerColumnName} {
				margin-left: @widthFixedLeftColumn + @gutterLeftSize;
				margin-right: @widthFixedRightColumn + @gutterRightSize;
			}
		}
		> .@{fixedLeftColumnName} {
			float: left;
			margin-left: -100%;
			width: @widthFixedLeftColumn;
		}
		> .@{fixedRightColumnName} {
			float: right;
			width: @widthFixedRightColumn;
			margin-left: -@widthFixedRightColumn;
		}
	}


	// MIXIN: Remove Fixed-Fluid-Fixed Layout Swap
	//--------------------------------------------------------------------------------
	// Parameter 				Type 		Default 			Description
	//--------------------------------------------------------------------------------
	// @fixedLeftColumnName 	string		fixed-left-column 	Default name of fixed left column
	// @fixedRightColumnName 	string		fixed-right-column	Default name of fixed right column
	// @fluidColumnName			string 		fluid-column 		Default name of fluid column
	// @fluidInnerColumnName 	string 		inner 				Default name of fluid column inner

	.unFixedFluidFixedSwap(@fixedLeftColumnName: fixed-left-column, @fixedRightColumnName: fixed-right-column, @fluidColumnName: fluid-column, @fluidInnerColumnName: inner) {
		> .@{fluidColumnName} {
			float: none;
			width: 100%;
			> .@{fluidInnerColumnName} {
				margin-left: 0;
				margin-right: 0;
			}
		}
		> .@{fixedLeftColumnName} {
			float: none;
			margin-left: 0;
			width: auto;
		}
		> .@{fixedRightColumnName} {
			float: none;
			width: auto;
			margin-left: 0;
		}
	}

	// Fixed-Fluid-Fixed Layout User Float and Margin
	//--------------------------------------------------------------------------------
	// Parameter 				Type 		Default 		Description
	//--------------------------------------------------------------------------------
	// @widthFixedColumn 		int			300px			With of fixed column
	// @gutterSize				int			20px			Space (margin) between columns
	// @fixedColumnName 		string		fixed-column	Default name of fixed column
	// @fluidColumnName			string 		fluid-column 	Default name of fluid column
	// @fluidInnerColumnName 	string 		inner 			Default name of fluid column inner

	.fixedFluidPush(@widthFixedColumn: 300px, @gutterSize: 20px, @fixedColumnName: fixed-column, @fluidColumnName: fluid-column, @fluidInnerColumnName: inner) {
		> .@{fixedColumnName} {
			float: left;
			width: @widthFixedColumn;
			margin-right: @gutterSize;
			+ .@{fluidColumnName} {
				margin-left: @widthFixedColumn + @gutterSize;
				> .@{fluidInnerColumnName} {
					display: inline-block;
					width: 100%;
				}
			}
		}
	}

	// Remove Fixed-Fluid-Fixed Layout User Float and Margin
	//--------------------------------------------------------------------------------
	// Parameter 				Type 		Default 		Description
	//--------------------------------------------------------------------------------
	// @fixedColumnName 		string		fixed-column	Default name of fixed left column
	// @fluidColumnName			string 		fluid-column 	Default name of fluid column
	// @fluidInnerColumnName 	string 		inner 			Default name of fluid column inner

	.unFixedFluidPush(@fixedColumnName: fixed-column, @fluidColumnName: fluid-column, @fluidInnerColumnName: inner) {
		> .@{fixedColumnName} {
			float: none;
			width: auto;
			margin-right: 0;
			+ .@{fluidColumnName} {
				margin-left: 0;
				> .@{fluidInnerColumnName} {
					display: block;
				}
			}
		}
	}

	// Fluid-Fixed Layout User Float and Margin
	//--------------------------------------------------------------------------------
	// Parameter 				Type 		Default 		Description
	//--------------------------------------------------------------------------------
	// @widthFixedColumn 		int			300px			With of fixed column
	// @gutterSize				int			20px			Space (margin) between columns
	// @fixedColumnName 		string		fixed-column	Default name of fixed column
	// @fluidColumnName			string 		fluid-column 	Default name of fluid column
	// @fluidInnerColumnName 	string 		inner 			Default name of fluid column inner

	.fluidFixedPush(@widthFixedColumn: 300px, @gutterSize: 20px, @fixedColumnName: fixed-column, @fluidColumnName: fluid-column, @fluidInnerColumnName: inner) {
		> .@{fixedColumnName} {
			float: right;
			width: @widthFixedColumn;
			margin-left: @gutterSize;
			+ .@{fluidColumnName} {
				margin-right: @widthFixedColumn + @gutterSize;
				> .@{fluidInnerColumnName} {
					display: inline-block;
					width: 100%;
				}
			}
		}
	}

	// Remove Fluid-Fixed Layout User Float and Margin
	//--------------------------------------------------------------------------------
	// Parameter 				Type 		Default 		Description
	//--------------------------------------------------------------------------------
	// @fixedColumnName 		string		fixed-column	Default name of fixed left column
	// @fluidColumnName			string 		fluid-column 	Default name of fluid column
	// @fluidInnerColumnName 	string 		inner 			Default name of fluid column inner

	.unFluidFixedPush(@fixedColumnName: fixed-column, @fluidColumnName: fluid-column, @fluidInnerColumnName: inner) {
		> .@{fixedColumnName} {
			float: none;
			width: @widthFixedColumn;
			margin-left: @gutterSize;
			+ .@{fluidColumnName} {
				margin-right: 0;
				> .@{fluidInnerColumnName} {
					display: block;
					width: auto;
				}
			}
		}
	}

	// Fixed-Fluid-Fixed Layout User Float and Margin
	//--------------------------------------------------------------------------------
	// Parameter 				Type 		Default 			Description
	//--------------------------------------------------------------------------------
	// @widthFixedLeftColumn 	int			300px				With of fixed left column
	// @widthFixedRightColumn 	int			300px				With of fixed right column
	// @gutterLeftSize			int			20px				Space (margin) of fixed left columns
	// @gutterRightSize			int			20px				Space (margin) of fixed right columns
	// @fixedLeftColumnName 	string		fixed-left-column 	Default name of fixed left column
	// @fixedRightColumnName 	string		fixed-right-column	Default name of fixed right column
	// @fluidColumnName			string 		fluid-column 		Default name of fluid column
	// @fluidInnerColumnName 	string 		inner 				Default name of fluid column inner

	.fixedFluidFixedPush(@widthFixedLeftColumn: 300px, @gutterLeftSize: 20px, @widthFixedRightColumn: 300px, @gutterRightSize: 20px, @fixedLeftColumnName: fixed-left-column, @fixedRightColumnName: fixed-right-column, @fluidColumnName: fluid-column, @fluidInnerColumnName: inner) {
		> .@{fixedLeftColumnName} {
			float: left;
			width: @widthFixedLeftColumn;
			margin-right: @gutterLeftSize;
			+ .@{fixedRightColumnName} {
			}
		}
		> .@{fixedLeftColumnName},
		> .@{fixedLeftColumnName} + .@{fixedRightColumnName}
		{
			+ .@{fluidColumnName} {
				margin-left: @widthFixedLeftColumn + @gutterLeftSize;
			}
		}
		.@{fixedRightColumnName} {
			float: right;
			width: @widthFixedRightColumn;
			margin-left: @gutterRightSize;
			+ .@{fluidColumnName} {
				margin-right: @widthFixedRightColumn + @gutterRightSize;
			}
		}
		> .@{fluidColumnName} {
			> .@{fluidInnerColumnName} {
				display: inline-block;
				width: 100%;
			}
		}
		> .@{fixedLeftColumnName}.hide + .@{fixedRightColumnName}.hide,
		> .@{fixedLeftColumnName}.hidden + .@{fixedRightColumnName}.hidden {
			+ .@{fluidColumnName} {
				margin-left: 0;
				margin-right: 0;
			}
		}
		> .@{fixedLeftColumnName}.hide + .@{fixedRightColumnName} + .@{fluidColumnName},
		> .@{fixedLeftColumnName}.hidden + .@{fixedRightColumnName} + .@{fluidColumnName} {
			margin-left: 0;
		}
		> .@{fixedRightColumnName}.hide + .@{fluidColumnName},
		> .@{fixedRightColumnName}.hidden + .@{fluidColumnName} {
			margin-right: 0;
		}
	}

	// Remove Fixed-Fluid-Fixed Layout User Float and Margin
	//--------------------------------------------------------------------------------
	// Parameter 				Type 		Default 			Description
	//--------------------------------------------------------------------------------
	// @fixedLeftColumnName 	string		fixed-left-column 	Default name of fixed left column
	// @fixedRightColumnName 	string		fixed-right-column	Default name of fixed right column
	// @fluidColumnName			string 		fluid-column 		Default name of fluid column
	// @fluidInnerColumnName 	string 		inner 				Default name of fluid column inner

	.unFixedFluidFixedPush(@fixedLeftColumnName: fixed-left-column, @fixedRightColumnName: fixed-right-column, @fluidColumnName: fluid-column, @fluidInnerColumnName: inner) {
		> .@{fixedLeftColumnName} {
			float: none;
			width: auto;
			margin-right: 0;
			+ .@{fixedRightColumnName} {
			}
		}
		> .@{fixedLeftColumnName},
		> .@{fixedLeftColumnName} + .@{fixedRightColumnName}
		{
			+ .@{fluidColumnName} {
				margin-left: 0;
			}
		}
		> .@{fixedRightColumnName} {
			float: right;
			width: auto;
			margin-left: @gutterRightSize;
			+ .@{fluidColumnName} {
				margin-right: 0;
			}
		}
		> .@{fluidColumnName} {
			> .@{fluidInnerColumnName} {
				display: block;
				width: auto;
			}
		}
	}
}

// MIXIN : Transform CSS3
// --------------------------------------------------
.transform(@transform) {
	-webkit-transform: @transform;
	-moz-transform: @transform;
	  -ms-transform: @transform; // IE9 only
	  transform: @transform;
	}

// MIXIN: Set Link Color
// --------------------------------------------------
.link-color(@color: @link-color, @colorHover: @link-hover-color){
	color: @color;
	&:hover {
		color: @colorHover;
	}
}

// MIXIN: Set Link Color for text
.link-text-color(@color: @text-color, @colorHover: @link-color){
	color: @color;
	&:hover {
		color: @colorHover;
	}
}

// MIXIN: SEO Help
// --------------------------------------------------
.seo-helper () {
	img:not([alt]), img[alt=""], img[alt^=" "], a[href=""], a[href^=" "], a[rel*="nofollow"] {
		outline: 2px solid red !important;
		outline-offset: 3px !important;
	}
	head, title:empty, link, meta {display: block;}
	title:empty:before {content: "You've left the <title> empty!"}
	link:before {content: "You don't have a <title>!"}
	title ~ link {display: none;}
	meta[name="description"][content=""]:before, meta[name="description"][content=" "]:before {content: "You've left description empty!";}
}

//
// MIXIN: MIXINS for this Project
// --------------------------------------------------//
// Write new mixin for project here...
